{"ast":null,"code":"import{Box,Button,FormControl,Input,Modal,ModalBody,ModalCloseButton,ModalContent,ModalFooter,ModalHeader,ModalOverlay,useDisclosure,useToast}from'@chakra-ui/react';import React,{useState}from'react';import{ChatState}from'../../context/chatProvider';import axios from'axios';import UserListItem from'../UserAvatar/UserListItem';import UserBadgeItem from'../UserAvatar/UserBadgeItem';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const GroupChatModal=_ref=>{let{children}=_ref;const{isOpen,onOpen,onClose}=useDisclosure();const[groupChatName,setGroupChatName]=useState();const[selectedUsers,setselectedUsers]=useState([]);const[search,setSearch]=useState(\"\");const[searchResult,setSearchResult]=useState([]);const[loading,setLoading]=useState(false);const toast=useToast();const{user,chats,setChats}=ChatState();const handleSearch=async query=>{setSearch(query);if(!query){return;}try{setLoading(true);const config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};const{data}=await axios.get(\"/api/user?search=\".concat(query),config);setLoading(false);setSearchResult(data);}catch(error){toast({title:\"Error Occured!\",description:\"Failed to load the chats\",status:\"error\",duration:5000,isClosable:true,position:\"bottom-left\"});return;}};const handleSubmit=async()=>{if(!groupChatName||selectedUsers.length===0){toast({title:\"Please fill all the fields\",status:\"warning\",duration:5000,isClosable:true,position:\"top\"});return;}try{const config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};const{data}=await axios.post(\"/api/chat/group\",{name:groupChatName,users:JSON.stringify(selectedUsers.map(u=>u._id))},config);setChats([data,...chats]);onClose();toast({title:\"New Group Chat Created\",status:\"success\",duration:5000,isClosable:true,position:\"bottom\"});}catch(error){toast({title:\"Failed to create the group chat\",description:error.response.data.message,status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});return;}};const handleGroup=userToAdd=>{if(selectedUsers.includes(userToAdd)){toast({title:\"User already added\",status:\"warning\",duration:5000,isClosable:true,position:\"top\"});return;}setselectedUsers([...selectedUsers,userToAdd]);};const handleDelete=delUser=>{setselectedUsers(selectedUsers.filter(sel=>sel._id!==delUser._id));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{onClick:onOpen,children:children}),/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsxs(ModalContent,{children:[/*#__PURE__*/_jsx(ModalHeader,{fontSize:\"35px\",fontFamily:\"Work sans\",display:\"flex\",justifyContent:\"center\",children:\"Create Group Chat\"}),/*#__PURE__*/_jsx(ModalCloseButton,{}),/*#__PURE__*/_jsxs(ModalBody,{display:\"flex\",flexDir:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsx(Input,{placeholder:\"Chat Name\",mb:3,onChange:e=>setGroupChatName(e.target.value)})}),/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsx(Input,{placeholder:\"Add User\",mb:1,onChange:e=>handleSearch(e.target.value)})}),/*#__PURE__*/_jsx(Box,{w:\"100%\",display:\"flex\",flexWrap:\"wrap\",children:selectedUsers.map(u=>/*#__PURE__*/_jsx(UserBadgeItem,{user:u,handleFunction:()=>handleDelete(u)},u._id))}),loading?/*#__PURE__*/_jsx(\"div\",{children:\"loading\"}):searchResult===null||searchResult===void 0?void 0:searchResult.slice(0,4).map(user=>/*#__PURE__*/_jsx(UserListItem,{user:user,handleFunction:()=>handleGroup(user)},user._id))]}),/*#__PURE__*/_jsx(ModalFooter,{children:/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleSubmit,children:\"Create Group\"})})]})]})]});};export default GroupChatModal;","map":{"version":3,"names":["Box","Button","FormControl","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useDisclosure","useToast","React","useState","ChatState","axios","UserListItem","UserBadgeItem","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GroupChatModal","_ref","children","isOpen","onOpen","onClose","groupChatName","setGroupChatName","selectedUsers","setselectedUsers","search","setSearch","searchResult","setSearchResult","loading","setLoading","toast","user","chats","setChats","handleSearch","query","config","headers","Authorization","concat","token","data","get","error","title","description","status","duration","isClosable","position","handleSubmit","length","post","name","users","JSON","stringify","map","u","_id","response","message","handleGroup","userToAdd","includes","handleDelete","delUser","filter","sel","onClick","fontSize","fontFamily","display","justifyContent","flexDir","alignItems","placeholder","mb","onChange","e","target","value","w","flexWrap","handleFunction","slice","colorScheme"],"sources":["C:/Users/nikit/MearnChatApp/frontend/src/components/miscellaneous/GroupChatModal.js"],"sourcesContent":["import {Box, Button, FormControl, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast} from '@chakra-ui/react';\r\nimport React, {useState} from 'react';\r\nimport {ChatState} from '../../context/chatProvider';\r\nimport axios from 'axios';\r\nimport UserListItem from '../UserAvatar/UserListItem'\r\nimport UserBadgeItem from '../UserAvatar/UserBadgeItem';\r\n\r\n\r\nconst GroupChatModal = ({children}) => {\r\n    const {isOpen, onOpen, onClose} = useDisclosure();\r\n    const [groupChatName,setGroupChatName] = useState();\r\n    const [selectedUsers, setselectedUsers] = useState([])\r\n    const [search, setSearch] = useState(\"\")\r\n    const [searchResult,setSearchResult] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const toast = useToast();\r\n\r\n    const {user, chats, setChats} = ChatState()\r\n\r\n    const handleSearch = async(query) => {\r\n        setSearch(query);\r\n        if(!query) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true)\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\":\"application/json\",  \r\n                    Authorization: `Bearer ${user.token}`,\r\n                },\r\n            }\r\n            const {data} = await axios.get(`/api/user?search=${query}`,config);\r\n            setLoading(false)\r\n            setSearchResult(data)\r\n\r\n        } catch (error) {\r\n            toast({\r\n                title:\"Error Occured!\",\r\n                description:\"Failed to load the chats\",\r\n                status:\"error\",\r\n                duration:5000,\r\n                isClosable:true,\r\n                position: \"bottom-left\"\r\n            });\r\n            return\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async() => {\r\n        if(!groupChatName || selectedUsers.length===0) {\r\n            toast({\r\n                title: \"Please fill all the fields\",\r\n                status: \"warning\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"top\",\r\n              });\r\n              return;\r\n        }\r\n\r\n        try {\r\n            \r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\":\"application/json\",\r\n                    Authorization:`Bearer ${user.token}`,\r\n                }\r\n            }\r\n            const {data} = await axios.post(`/api/chat/group`,{\r\n                name:groupChatName,\r\n                users:JSON.stringify(selectedUsers.map((u)=> u._id))\r\n            },config)\r\n\r\n            setChats([data,...chats])\r\n            onClose();\r\n            toast({\r\n                title: \"New Group Chat Created\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom\",\r\n              });\r\n\r\n        } catch (error) {\r\n            toast({\r\n                title: \"Failed to create the group chat\",\r\n                description: error.response.data.message,\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom\",\r\n              });\r\n              return;\r\n        }\r\n    }\r\n\r\n    const handleGroup = (userToAdd) => {\r\n        if(selectedUsers.includes(userToAdd)){\r\n            toast({\r\n                title: \"User already added\",\r\n                status: \"warning\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"top\",\r\n              });\r\n              return;\r\n        }\r\n\r\n        setselectedUsers([...selectedUsers,userToAdd])\r\n    }\r\n\r\n    const handleDelete = (delUser) => {\r\n        setselectedUsers(selectedUsers.filter(sel => sel._id!== delUser._id))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span onClick={onOpen}>{children}</span>\r\n\r\n            <Modal isOpen={isOpen} onClose={onClose}>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                <ModalHeader fontSize=\"35px\"\r\n                    fontFamily=\"Work sans\"\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                >Create Group Chat</ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody display=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n                    <FormControl>\r\n                        <Input placeholder='Chat Name' mb={3} onChange={(e)=> setGroupChatName(e.target.value)} />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <Input placeholder='Add User' mb={1} onChange={(e)=> handleSearch(e.target.value)} />\r\n                    </FormControl>\r\n                    <Box w=\"100%\" display=\"flex\" flexWrap=\"wrap\">\r\n                        {selectedUsers.map(u => (\r\n                            <UserBadgeItem key={u._id} user={u} handleFunction={()=> handleDelete(u)} />\r\n                        ))}\r\n                    </Box>\r\n                    {loading ?\r\n                        <div>loading</div>\r\n                    :\r\n                        ( searchResult?.slice(0,4).map(user => ( \r\n                            <UserListItem key={user._id} user={user} handleFunction={()=> handleGroup(user)} /> \r\n                        )))\r\n                    }\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <Button colorScheme='blue' onClick={handleSubmit}>\r\n                    Create Group\r\n                    </Button>\r\n                </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GroupChatModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}