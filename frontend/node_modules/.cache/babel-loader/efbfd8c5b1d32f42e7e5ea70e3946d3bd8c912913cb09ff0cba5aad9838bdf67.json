{"ast":null,"code":"import React,{useEffect,useState}from'react';import{ChatState}from'../context/chatProvider';import{Box,FormControl,IconButton,Input,Spinner,Text,useToast}from'@chakra-ui/react';import{ArrowBackIcon}from'@chakra-ui/icons';import{getSender,getSenderFull}from'../config/ChatLogics';import ProfileModel from'./miscellaneous/ProfileModel';import UpdateGroupChatModal from'./miscellaneous/UpdateGroupChatModal';import axios from'axios';import'./style.css';import ScrollbarChat from'./UserAvatar/ScrollbarChat';import io from'socket.io-client';import Lottie from'react-lottie';import animationData from'../animation/typing.json';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ENDPOINT=\"http://localhost:3000\";var socket,selectedChatCompare;const SingleChat=_ref=>{let{fetchAgain,setFetchAgain}=_ref;const[messages,setMessages]=useState([]);const[loading,setLoading]=useState(false);const[newMessages,setNewMessages]=useState();const[socketConnected,setSocketConnected]=useState(false);const[typing,setTyping]=useState(false);const[isTyping,setIsTyping]=useState(false);const defaultOption={loop:true,autoplay:true,animationData:animationData,renderSettings:{preserveAspectRatio:'xMilYMid slice'}};const{user,selectedChat,setSelectedChat,notification,setNotification}=ChatState();const toast=useToast();const fetchMessages=async()=>{if(!selectedChat)return;try{const config={headers:{Authorization:\"Bearer \".concat(user.token)}};setLoading(true);const{data}=await axios.get(\"api/message/\".concat(selectedChat._id),config);setMessages(data);setLoading(false);socket.emit('join chat',selectedChat._id);}catch(error){toast({title:\"Error Occured!\",description:\"Failed to load the chats\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});return;}};useEffect(()=>{socket=io(ENDPOINT);socket.emit('setup',user);socket.on('connected',()=>setSocketConnected(true));socket.on('typing',()=>setIsTyping(true));socket.on('stop typing',()=>setIsTyping(false));},[]);useEffect(()=>{fetchMessages();selectedChatCompare=selectedChat;},[selectedChat]);useEffect(()=>{console.log(\"notification\",notification);socket.on('message recieved',newMessageRecieved=>{if(!selectedChatCompare||selectedChatCompare._id!==newMessageRecieved.chat._id){if(!notification.includes(newMessageRecieved)){setNotification([newMessageRecieved,...notification]);setFetchAgain(!fetchAgain);}}else{setMessages([...messages,newMessageRecieved]);}});});const sendMessage=async event=>{if(event.key===\"Enter\"&&newMessages){socket.emit('stop typing',selectedChat._id);try{const config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};const{data}=await axios.post(\"api/message\",{content:newMessages,chatId:selectedChat._id},config);setNewMessages(\"\");socket.emit('new message',data);setMessages([...messages,data]);}catch(error){toast({title:\"Error Occured!\",description:\"Failed to load the chats\",status:\"error\",duration:5000,isClosable:true,position:\"bottom\"});return;}}};const typingHandler=e=>{setNewMessages(e.target.value);//Typing Indicator logic\nif(!socketConnected)return;if(!typing){setTyping(true);socket.emit('typing',selectedChat._id);}let lastTypingTime=new Date().getTime();var timerLength=3000;setTimeout(()=>{var timeNow=new Date().getTime();var timeDifference=timeNow-lastTypingTime;if(timeDifference>=timerLength&&typing){socket.emit('stop typing',selectedChat._id);setTyping(false);}},timerLength);};return/*#__PURE__*/_jsxs(_Fragment,{children:[\" \",selectedChat?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:{base:\"28px\",md:\"30px\"},pb:3,px:2,w:\"100%\",fontFamily:\"Work sans\",display:\"flex\",justifyContent:{base:\"space-between\"},alignItems:\"center\",children:[/*#__PURE__*/_jsx(IconButton,{display:{base:\"flex\",md:\"none\"},icon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:()=>setSelectedChat(\"\")}),!selectedChat.isGroupChat?/*#__PURE__*/_jsxs(_Fragment,{children:[getSender(user,selectedChat.users),/*#__PURE__*/_jsx(ProfileModel,{user:getSenderFull(user,selectedChat.users)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedChat.chatName.toUpperCase(),/*#__PURE__*/_jsx(UpdateGroupChatModal,{fetchAgain:fetchAgain,setFetchAgain:setFetchAgain,fetchMessages:fetchMessages})]})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexDir:\"column\",justifyContent:\"flex-end\",p:3,bg:\"#E8E8E8\",w:\"100%\",h:\"100%\",borderRadius:\"lg\",overflowY:\"hidden\",children:[loading?/*#__PURE__*/_jsx(Spinner,{size:\"xl\",w:20,h:20,alignSelf:\"center\",margin:\"auto\"}):/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:/*#__PURE__*/_jsx(ScrollbarChat,{messages:messages})}),/*#__PURE__*/_jsxs(FormControl,{onKeyDown:sendMessage,isRequired:true,mt:3,children:[isTyping?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Lottie,{options:defaultOption,width:70,style:{marginBottom:15,marginLeft:0}})}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(Input,{variant:\"filled\",bg:\"#E0E0E0\",placeholder:\"Enter a message...\",onChange:typingHandler,value:newMessages})]})]})]}):/*#__PURE__*/_jsx(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",h:\"100%\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"3xl\",pb:3,fontFamily:\"Work sans\",children:\"Click on a user to start chatting\"})})]});};export default SingleChat;","map":{"version":3,"names":["React","useEffect","useState","ChatState","Box","FormControl","IconButton","Input","Spinner","Text","useToast","ArrowBackIcon","getSender","getSenderFull","ProfileModel","UpdateGroupChatModal","axios","ScrollbarChat","io","Lottie","animationData","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ENDPOINT","socket","selectedChatCompare","SingleChat","_ref","fetchAgain","setFetchAgain","messages","setMessages","loading","setLoading","newMessages","setNewMessages","socketConnected","setSocketConnected","typing","setTyping","isTyping","setIsTyping","defaultOption","loop","autoplay","renderSettings","preserveAspectRatio","user","selectedChat","setSelectedChat","notification","setNotification","toast","fetchMessages","config","headers","Authorization","concat","token","data","get","_id","emit","error","title","description","status","duration","isClosable","position","on","console","log","newMessageRecieved","chat","includes","sendMessage","event","key","post","content","chatId","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDifference","children","fontSize","base","md","pb","px","w","fontFamily","display","justifyContent","alignItems","icon","onClick","isGroupChat","users","chatName","toUpperCase","flexDir","p","bg","h","borderRadius","overflowY","size","alignSelf","margin","className","onKeyDown","isRequired","mt","options","width","style","marginBottom","marginLeft","variant","placeholder","onChange"],"sources":["C:/Users/nikit/MearnChatApp/frontend/src/components/SingleChat.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {ChatState} from '../context/chatProvider';\r\nimport {Box, FormControl, IconButton, Input, Spinner, Text, useToast} from '@chakra-ui/react';\r\nimport {ArrowBackIcon} from '@chakra-ui/icons';\r\nimport {getSender, getSenderFull} from '../config/ChatLogics';\r\nimport ProfileModel from './miscellaneous/ProfileModel';\r\nimport UpdateGroupChatModal from './miscellaneous/UpdateGroupChatModal';\r\nimport axios from 'axios';\r\nimport './style.css'\r\nimport ScrollbarChat from './UserAvatar/ScrollbarChat';\r\nimport io from 'socket.io-client'\r\nimport Lottie from 'react-lottie'\r\nimport animationData from '../animation/typing.json'\r\n\r\nconst ENDPOINT = \"http://localhost:3000\";\r\nvar socket, selectedChatCompare;\r\n\r\nconst SingleChat = ({fetchAgain, setFetchAgain}) => {\r\n\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [newMessages, setNewMessages] = useState();\r\n    const [socketConnected, setSocketConnected] = useState(false);\r\n    const [typing, setTyping] = useState(false);\r\n    const [isTyping, setIsTyping] = useState(false);\r\n\r\n    \r\n    const defaultOption = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: animationData,\r\n        renderSettings: {\r\n            preserveAspectRatio: 'xMilYMid slice'\r\n        }\r\n    }\r\n\r\n    const {user, selectedChat, setSelectedChat,notification, setNotification} = ChatState();\r\n    const toast = useToast();\r\n\r\n    const fetchMessages = async() => {\r\n        if(!selectedChat) return;\r\n        try {\r\n            const config = {\r\n                headers : {\r\n                    Authorization: `Bearer ${user.token}`\r\n                },\r\n            }\r\n\r\n            setLoading(true)\r\n            const {data} = await axios.get(`api/message/${selectedChat._id}`, config)\r\n\r\n            setMessages(data)\r\n            setLoading(false)\r\n\r\n            socket.emit('join chat', selectedChat._id)\r\n\r\n        } catch (error) {\r\n            toast({\r\n                title:\"Error Occured!\",\r\n                description:\"Failed to load the chats\",\r\n                status:\"error\",\r\n                duration:5000,\r\n                isClosable:true,\r\n                position: \"bottom\"\r\n            });\r\n            return\r\n        }\r\n    };\r\n\r\n    useEffect(()=> {\r\n        socket = io(ENDPOINT);\r\n        socket.emit('setup',user)\r\n        socket.on('connected', ()=> setSocketConnected(true) )\r\n        socket.on('typing', ()=> setIsTyping(true))\r\n        socket.on('stop typing', ()=> setIsTyping(false))\r\n    },[])\r\n\r\n    useEffect(()=> {\r\n        fetchMessages();\r\n\r\n        selectedChatCompare = selectedChat;\r\n    },[selectedChat]);\r\n\r\n    \r\n\r\n    useEffect(()=> {\r\n        console.log(\"notification\",notification)\r\n       socket.on('message recieved',(newMessageRecieved)=> {\r\n        if(!selectedChatCompare || selectedChatCompare._id !== newMessageRecieved.chat._id)  {\r\n            if(!notification.includes(newMessageRecieved)){\r\n                setNotification([newMessageRecieved,...notification])\r\n                setFetchAgain(!fetchAgain)\r\n            }\r\n        }  \r\n        else {\r\n            setMessages([...messages,newMessageRecieved])\r\n        }\r\n       })\r\n    });\r\n\r\n    const sendMessage = async(event) => {\r\n        if(event.key===\"Enter\" && newMessages){\r\n            socket.emit('stop typing',selectedChat._id)\r\n            try {\r\n                const config = {\r\n                    headers : {\r\n                        \"Content-type\": \"application/json\" ,\r\n                        Authorization: `Bearer ${user.token}`\r\n                    },\r\n                }\r\n\r\n                const {data} = await axios.post(`api/message`, {\r\n                    content: newMessages,\r\n                    chatId: selectedChat._id\r\n                }, config)\r\n\r\n                setNewMessages(\"\")\r\n\r\n                socket.emit('new message', data)\r\n\r\n                setMessages([...messages,data])\r\n\r\n            } catch (error) {\r\n                toast({\r\n                    title:\"Error Occured!\",\r\n                    description:\"Failed to load the chats\",\r\n                    status:\"error\",\r\n                    duration:5000,\r\n                    isClosable:true,\r\n                    position: \"bottom\"\r\n                });\r\n                return\r\n            }\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    const typingHandler = (e) => {\r\n        setNewMessages(e.target.value)\r\n\r\n        //Typing Indicator logic\r\n        if(!socketConnected) return;\r\n\r\n        if(!typing){\r\n            setTyping(true)\r\n            socket.emit('typing',selectedChat._id)\r\n        }\r\n\r\n        let lastTypingTime = new Date().getTime();\r\n        var timerLength = 3000;\r\n        setTimeout(()=> {\r\n            var timeNow = new Date().getTime()\r\n            var timeDifference = timeNow - lastTypingTime;\r\n\r\n            if(timeDifference>= timerLength && typing) {\r\n                socket.emit('stop typing', selectedChat._id)\r\n                setTyping(false)\r\n            }\r\n\r\n        }, timerLength)\r\n\r\n    }\r\n\r\n    return (\r\n        <> {\r\n                selectedChat? (\r\n                    <>\r\n                        <Text\r\n                            fontSize={{base: \"28px\", md: \"30px\"}}\r\n                            pb={3}\r\n                            px={2}\r\n                            w=\"100%\"\r\n                            fontFamily=\"Work sans\"\r\n                            display=\"flex\"\r\n                            justifyContent={{base: \"space-between\"}}\r\n                            alignItems=\"center\"\r\n                        >\r\n                            <IconButton \r\n                                display={{base: \"flex\" , md:\"none\"}} \r\n                                icon={<ArrowBackIcon />}\r\n                                onClick={()=> setSelectedChat(\"\")}\r\n                            />\r\n                            {!selectedChat.isGroupChat ? (\r\n                                <>\r\n                                    {getSender(user, selectedChat.users)}\r\n                                    <ProfileModel user={getSenderFull(user, selectedChat.users)} />\r\n                                </>\r\n                            ):(\r\n                                <>\r\n                                    {selectedChat.chatName.toUpperCase()}\r\n                                    <UpdateGroupChatModal fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} fetchMessages={fetchMessages} />\r\n                                </>\r\n                            )}\r\n                        </Text>\r\n                        <Box \r\n                            display=\"flex\"\r\n                            flexDir=\"column\"\r\n                            justifyContent=\"flex-end\"\r\n                            p={3}\r\n                            bg=\"#E8E8E8\"\r\n                            w=\"100%\"\r\n                            h=\"100%\"\r\n                            borderRadius=\"lg\"\r\n                            overflowY=\"hidden\"\r\n                        >\r\n                            {loading ? (\r\n                                <Spinner size=\"xl\"\r\n                                    w={20}\r\n                                    h={20}\r\n                                    alignSelf=\"center\"\r\n                                    margin=\"auto\"\r\n                                />\r\n                            ) :(\r\n                                <div className='messages'>\r\n                                    <ScrollbarChat messages={messages} />\r\n                                </div>\r\n                            )}\r\n\r\n                            <FormControl\r\n                                onKeyDown={sendMessage}\r\n                                isRequired\r\n                                mt={3}\r\n                            >\r\n                                {isTyping ? <div>\r\n                                    <Lottie\r\n                                        options={defaultOption}\r\n                                        width={70}\r\n                                        style={{marginBottom: 15, marginLeft: 0}}\r\n                                    /> \r\n                                 </div>:<></>}\r\n                                <Input\r\n                                    variant=\"filled\"\r\n                                    bg=\"#E0E0E0\"\r\n                                    placeholder='Enter a message...'\r\n                                    onChange={typingHandler}\r\n                                    value={newMessages}\r\n                                />\r\n                            </FormControl>\r\n\r\n                        </Box>\r\n                    </>\r\n                ) : (\r\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n                        <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n                            Click on a user to start chatting\r\n                        </Text>\r\n                    </Box>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SingleChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}